<template>
  <view class="order">
    <view class="vanaddicon" bindtap="addorderfun">
      <van-icon name="add" color="#356ECA" size="2.4em" />
      <text class="vanaddtext">新增需求</text>
    </view>
    <!-- vant-weapp 骨架图模块源代码以被sanzro修改 -->
    <van-skeleton
      row="6"
      animate="{{true}}"
      row-height="100px"
      loading="{{loading}}"
    />
    <van-empty
      description="发生网络错误，请稍后刷新此页面，为您带来不便请见谅"
      style="display: {{emptyShow}}"
    />
    <view wx:for="{{list}}" wx:key="index" class="bgcolor">
      <van-swipe-cell right-width="{{ 100 }}">
        <taskcard
          title="{{item.title}}"
          desc="{{item.desc}}"
          name="{{item.name}}"
          dist="{{item.dist}}"
          price="{{item.price}}"
          thumb="{{item.thumb}}"
          show="{{item.show}}"
          statustagstyle="{{item.statustagstyle}}"
        />
        <view slot="right" class="vancellleft cell01" bindtap="editorder">
          <image src="{{editicon}}" style="width: 2.5em; height: 2.5em" />
        </view>
        <view slot="right" class="vancellleft cell02" bindtap="clickDialog">
          <image src="{{delicon}}" style="width: 2.5em; height: 2.5em" />
        </view>
      </van-swipe-cell>
    </view>
    <i-load-more
      tip="{{ loadMoreTip }}"
      loading="{{ loadMore }}"
      i-class="loadMore"
    />
    <van-dialog id="van-dialog" />
    <tabbar />
  </view>
</template>

<script>
import mpx, { createPage } from "@mpxjs/core";
import mpxFetch from "@mpxjs/fetch";
import Dialog from "vant-weapp/dist/dialog/dialog.js";
import delicon from "../material/delicon.svg";
import editicon from "../material/editicon.svg";
import { mockUrl } from "../utils/requestUrl.js";

createPage({
  data: {
    delicon: delicon,
    editicon: editicon,
    list: [],
    confirmcolor: "red",
    loading: true,
    emptyShow: "none",
    loadMore: false,
    loadMoreTip: "到底了",
  },
  onLoad() {
    wx.stopPullDownRefresh(); //刷新完成后停止下拉刷新动效
    wx.setNavigationBarTitle({
      title: "需求",
    });

    mpx.use(mpxFetch);
    mpx.xfetch
      .fetch({
        url: mockUrl + "/demand/list",
      })
      .then((res) => {
        this.list = res.data.list;
      })
      .then(() => {
        // 取消显示骨架图
        this.setData({ loading: false });
      })
      .catch((err) => {
        // console.log(err);
        this.setData({ loading: false });
        this.setData({ emptyShow: "block" });
      });
  },
  // 触顶刷新
  onPullDownRefresh() {
    this.onLoad(); //重新加载onLoad()
  },
  // 触底 lazy load
  onReachBottom() {
    this.setData({
      loadMore: true,
      loadMoreTip: "加载中",
    });
    mpx.use(mpxFetch);
    mpx.xfetch
      .fetch({
        url: mockUrl + "/demand/list" + 5,
      })
      .then((res) => {
        // 将新获取的数据推进原有数组有 bug，暂时注释
        // this.list = res.data.list;
        // 将新获取的数据推进原有数组有 bug，暂时注释
        setTimeout(() => {
          // 模拟返回数据所需时间
          this.setData({
            loadMore: false,
            loadMoreTip: "到底了",
          });
        }, 1000);
      })
      .catch((err) => {
        console.log(err);
        setTimeout(() => {
          // 模拟返回数据所需时间
          this.setData({
            loadMore: false,
            loadMoreTip: "到底了",
          });
        }, 1000);
      });
  },
  pageLifetimes: {
    show() {
      if (typeof this.getTabBar === "function" && this.getTabBar()) {
        this.getTabBar().setData({
          active: 1,
        });
      }
    },
  },
  methods: {
    addorderfun() {
      wx.navigateTo({ url: "addorder" });
    },
    editorder() {
      wx.navigateTo({ url: "addorder" });
    },
    clickDialog() {
      Dialog.confirm({
        message: "确定删除该订单？！",
      })
        .then(() => {
          // 点击确认按钮执行
          console.log("confirm");
          Dialog.close();
        })
        .catch(() => {
          // 点击取消按钮执行
          console.log("cannel");
          Dialog.close();
        });
    },
  },
});
</script>

<style>
.order {
  font: 14px "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.4em;
  color: #4d4d4d;
  min-width: 230px;
  max-width: 550px;
  margin: 0 auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 300;
  padding-bottom: 4rem;
}

.bgcolor {
  background: #fff;
}

.vanaddicon {
  margin: 10px 0 10px 22rpx;
}

.vanaddtext {
  position: absolute;
  margin: 7px 0 0 8px;
  font-size: 24px;
  font-weight: 400;
}

.vancellleft {
  position: absolute;
  margin-top: 2rem;
}

.cell02 {
  margin-left: 2.8rem;
}

.dialog-index--van-dialog__confirm .van-button__text {
  color: red;
}

.loadMore {
  margin-bottom: -10px !important;
}
</style>

<script type="application/json">
{
  "usingComponents": {
    "van-icon": "vant-weapp/dist/icon/index",
		"van-swipe-cell": "vant-weapp/dist/swipe-cell/index",
		"van-dialog": "vant-weapp/dist/dialog/index",
		"van-skeleton": "@vant/weapp/dist/skeleton/index",
		"van-empty": "@vant/weapp/dist/empty/index",
		"i-load-more": "iview-weapp/dist/load-more/index",
    "tabbar": "../custom-tab-bar/index",
		"taskcard": "../components/taskcard"
  }
}
</script>
